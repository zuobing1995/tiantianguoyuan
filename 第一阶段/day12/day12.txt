day11回顾

函数式 functional programing
  偶合度
    可重入函数
    不可重入函数
高阶函数 
  map
  filter
  sorted

递归函数 recursion
  直接或间接调自身


闭包:
  




day12笔记
装饰器 decorator(专业提高篇)  
  什么是装饰器
    装饰器是一个函数,主要作用是用来包装另一个函数或类(后面才讲)
    包装的目的是在不改变原函数(或类名)的情况下改变被包装对象 的行为

函数装饰器
  是指装饰器是一个函数,传入的是一个函数,返回的是一个函数

  语法:
    def 装饰器函数名(参数):
        语句块
        return 函数对象

    @装饰器函数名<换行>
    def 函数名(形参列表):
        语句块
  原理:
    被装饰函数的变量(函数名)绑定装饰器函数调用后的返回的函数
  示例见:
    mydeco1.py
    mydeco2.py
    mydeco3.py
    mydeco4.py



函数的文档字符串:
  函数内第一次未赋值给任何变量的字符串是此函数的文档字符串
  语法:
    def 函数名(参数列表):
        '函数文档字符串'
        语句块
  说明:
    1. 文档字符串通常用来说明函数的功能和使用方法
    2. 在交互模式下,输入:
        >>> help(函数名) 可以查看函数的文档字符串
    3. 函数的文档字符串绑定在函数的__doc__属性上
  示例:
    def mysum(n):
        '''mysum 函数用来求
        1 + 2 + 3 + .... + n 的和
        '''
        return 100
    >>> help(mysum)

函数的 __doc__ 属性
   __doc__ 属性用于记录文档字符串


函数的 __name__ 属性
  __name__属性用于记录函数名

说明:
  以双下划线开头,以双下划线结尾的标识符通常代表python的特殊变量

函数定义的完整语法:
  [@装饰器名1]
  [@装饰器名2]
  [...]
  def 函数名(位置形参, *元组形参名, 命名关键字形参, **字典形参):
      '文档字符串'
      语句块


面试题:
  L = [1, 2, 3]
  # 缺省参数[] 在def语句执行时创建此列表，并一直被f函数所绑定
  def f(n=0, lst=[]):
      lst.append(n)
      print(lst)

  f(4, L)  # [1, 2, 3, 4]
  f(5, L)  # [1, 2, 3, 4, 5]
  f(100)   # [100]
  f(200)  # [100, 200] 打印结果是什么,为什么?



模块 Module
  什么是模块
    模块是一个包含有一系列数据，函数，类等组成的程序组
    模块是一个文件 ，模块文件名通常以.py结尾

  作用:
    让一些相关的数据，函数，类等有逻辑的组织在一起，使逻辑结构更新加清晰
    模块中的数据，函数和类等可以提供给其它模块或程序使用

  模块的分类:
    1. 内置模块, 在解释执行器内部定义，可以直接使用
    2. 标准库模块, 安装python时已安装且可以直接使用
    3. 第三方模块(通常为开源), 需要自己安装
    4. 用户自定义模块（可以作为其它人的第三方模块)

模块的导入 import
import 语句
  语法:
    import 模块名1 [as 模块新名1], 模块名2 [as 模块新名2], ...
  作用:
    将某模块整体导入到当前模块中
  示例:
    import math  # 导入数学模块
    import sys, time  # 导入系统模块和时间模块
    见: import1.py
  用法:
    模块名.属性名
    如:
      print(math.factorial(5))
      print(math.cos(0))

函数:
  dir(obj)函数，返回所有属性的字符串列表
  help(obj)函数，可以查看模块的文档字符串

练习:
  写程序:
    1) 输入一个圆的半径，打印出这个圆的面积
    2) 输入一个圆的面积，打印出这个圆的半径
      (要求用math模块内的函数和数据)



from import 语句
  语法:
    from 模块名 import 模块属性名1 [as 属性新名1], 模块属性名2 [as 属性新名2], .....
  作用:
    将某模块内的一个或多个属性导入到当前模块的作用域
  示例:
    from math import factorial as fac
    from math import sqrt
    from math import pi, e, sin, cos
    print('5的阶乘是:', fac(5))
    print('9的平方根是:', sqrt(9))
    print('圆周率是:', pi)


from import *　语句
  语法:
    from 模块名 import *
  作用:
    将某模块的所有属性导入到当前模块
  示例:
    from math import *
    print(sin(pi/2))
    print(factorial(5))  # 可以直接使用math里的全部属性
　
dir 函数:
  dir([对象])  返回一个字符串列表
  作用:
    1.如果没有参数调用，则返回当前作用域内所有变量的列表
    2.如果给定一个对象作为参数，则返回这个对象的所有变量的列表
      1) 对于一个模块,返回这个模块的全部属性
      2) 对于一个类对象，返回类对象的所有变量并递归基类对象的所有变量
      3) 对于其它对象返回所有变量，类变量和基类变量


数学模块 math
  文档参见:
    python_base_docs_html/数学模块math.html

时间模块 time
  此模块提供了时间相关的函数
  文档参见:
    python_base_docs_html/时间模块time.html

练习:
  写一个程序，输入你的出生日期
    1) 算出你已经出生了多少天?
    2) 算出你出生那天是星期几?
  
练习:
  1. 写一个程序，打印电子时间:
      格式为:
        HH:MM:SS
      每过一秒钟刷新一次
  2. 编写一个闹钟程序，启动时设置定时间, 到时间后打印一句:
      "时间到",然后程序退出

  3. 看懂学生信息管理程序













